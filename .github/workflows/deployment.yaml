name: Build and Push Docker Image

on:
  push:
    branches:
      - master
    paths:
      - 'src/**'
      - 'server/**'
      - 'migrations/**'
      - 'resources/**'
      - 'vendor/**'
      - 'docker/image/**'
      - CMakeLists.txt

env:
  IMAGE_NAME: oasis-server
  BUILD_TYPE: Debug

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            dev
            type=schedule
            type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_TYPE=${{ env.BUILD_TYPE }}
          file: ./docker/image/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: SSH into server and deploy
        uses: appleboy/ssh-action@master
        env:
          CR_PAT: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ secrets.GH_USERNAME }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: CR_PAT,GITHUB_USERNAME
          script: |
            echo $CR_PAT | docker login ghcr.io -u $GITHUB_USERNAME --password-stdin
            docker-compose pull server
            docker-compose up -d